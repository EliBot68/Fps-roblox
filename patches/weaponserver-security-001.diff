--- a/ServerScriptService/WeaponServer/WeaponServer.lua
+++ b/ServerScriptService/WeaponServer/WeaponServer.lua
@@ -137,7 +137,29 @@ end
 
 -- Handle weapon firing
-function WeaponServer.HandleFireWeapon(player: Player, weaponId: string, originCFrame: CFrame, direction: Vector3, clientTick: number)
+function WeaponServer.HandleFireWeapon(player: Player, weaponId: string, originCFrame: CFrame, direction: Vector3, clientTick: number)
+	-- SECURITY FIX: Validate all client inputs before processing
+	if not player or not player.Character then
+		warn("Invalid player or character in HandleFireWeapon")
+		return
+	end
+	
+	-- SECURITY FIX: Validate client tick time against server time
+	local currentTime = tick()
+	local timeDelta = math.abs(currentTime - clientTick)
+	if timeDelta > 1.0 then -- Allow max 1 second time difference
+		warn("Client time desync detected for player:", player.Name, "Delta:", timeDelta)
+		return
+	end
+	
+	-- SECURITY FIX: Validate origin CFrame against player's actual position
+	local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
+	if not humanoidRootPart then return end
+	
+	local serverPosition = humanoidRootPart.Position
+	local clientPosition = originCFrame.Position
+	local positionDelta = (serverPosition - clientPosition).Magnitude
+	
+	if positionDelta > 10 then -- Allow max 10 studs difference for lag compensation
+		warn("Position exploit detected for player:", player.Name, "Delta:", positionDelta)
+		-- Call anti-cheat system
+		if AntiCheat then
+			AntiCheat.reportSuspiciousActivity(player, "position_exploit", {
+				serverPos = serverPosition,
+				clientPos = clientPosition,
+				delta = positionDelta
+			})
+		end
+		return
+	end
+	
 	local userId = player.UserId
-	local currentTime = tick()
 	
 	-- Validate player data
@@ -166,7 +188,7 @@ function WeaponServer.HandleFireWeapon(player: Player, weaponId: string, origin
 	end
 	
-	-- Use server-validated origin (prevent teleport exploits)
+	-- SECURITY FIX: Always use server position, never trust client
-	local serverOrigin = humanoidRootPart.Position + Vector3.new(0, 1.5, 0) -- Eye level
+	local serverOrigin = serverPosition + Vector3.new(0, 1.5, 0) -- Eye level
 	
 	-- Ignore player's character for raycast
 	local ignoreList = {character}
@@ -196,6 +218,12 @@ function WeaponServer.HandleFireWeapon(player: Player, weaponId: string, origin
 	-- Process hits
 	local hitData = {}
 	
+	-- SECURITY FIX: Limit max hits per shot to prevent exploit
+	local maxHitsPerShot = weapon.PelletCount or 1
+	if #hitResults > maxHitsPerShot * 2 then -- Allow some tolerance
+		warn("Excessive hits detected for player:", player.Name)
+		return
+	end
+	
 	for _, raycastResult in ipairs(hitResults) do
 		local hitPosition = raycastResult.Position
 		local hitPart = raycastResult.Instance
