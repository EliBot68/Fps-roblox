--- a/ServerScriptService/Core/AntiExploit.server.lua
+++ b/ServerScriptService/Core/AntiExploit.server.lua
@@ -197,6 +197,15 @@ function AntiExploit:ExecuteSecurityAction(player: Player, actionType: string, 
 		elseif actionType == "MONITOR" then
 			self:AddToSuspiciousList(player, threat)
 			
+		-- SECURITY FIX: Add validation for security action types
+		else
+			if self.logger then
+				self.logger.Error("AntiExploit", "Invalid security action type", {
+					actionType = actionType,
+					player = player.Name,
+					threatType = threat.threatType
+				})
+			end
+			return
 		end
 	end)
 	
@@ -298,11 +307,22 @@ function AntiExploit:ValidateRemoteEventCall(player: Player, eventName: string,
 		return false, {}
 	end
 	
+	-- SECURITY FIX: Rate limiting before validation
+	local rateLimitKey = string.format("%s:%s", player.UserId, eventName)
+	local lastCall = systemState.lastRemoteCalls[rateLimitKey] or 0
+	local currentTime = tick()
+	
+	if currentTime - lastCall < 0.1 then -- 100ms minimum between calls
+		self:HandleSecurityThreat({
+			playerId = player.UserId,
+			threatType = "RATE_LIMIT_VIOLATION",
+			severity = "HIGH",
+			description = string.format("Rate limit exceeded for %s", eventName),
+			evidence = { eventName = eventName, timeDiff = currentTime - lastCall }
+		})
+		return false, {}
+	end
+	systemState.lastRemoteCalls[rateLimitKey] = currentTime
+	
 	-- Use SecurityValidator for validation
 	return self.securityValidatorInstance:ValidateRemoteEvent(player, eventName, schema, ...)
 end
